2009-05-27  Aurelien Jarno  <aurelien@aurel32.net>

	* nss/getent.c (print_gshadow): New function. (gshadow_keys):
	  Likewise.

---
 nss/getent.c |   67 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 67 insertions(+)

--- a/nss/getent.c
+++ b/nss/getent.c
@@ -30,6 +30,7 @@
 #include <netdb.h>
 #include <pwd.h>
 #include <shadow.h>
+#include <gshadow.h>
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
@@ -752,6 +753,71 @@
   return result;
 }
 
+/* This is for shadow */
+static void
+print_gshadow (struct sgrp *sg)
+{
+  unsigned int i = 0;
+
+  printf ("%s:%s:",
+	  sg->sg_namp ? sg->sg_namp : "",
+	  sg->sg_passwd ? sg->sg_passwd : "");
+
+  while (sg->sg_adm[i] != NULL)
+    {
+      fputs_unlocked (sg->sg_adm[i], stdout);
+      ++i;
+      if (sg->sg_adm[i] != NULL)
+	putchar_unlocked (',');
+    }
+
+  putchar_unlocked (':');
+
+  i = 0;
+  while (sg->sg_mem[i] != NULL)
+    {
+      fputs_unlocked (sg->sg_mem[i], stdout);
+      ++i;
+      if (sg->sg_mem[i] != NULL)
+	putchar_unlocked (',');
+    }
+
+  putchar_unlocked ('\n');
+}
+
+static int
+gshadow_keys (int number, char *key[])
+{
+  int result = 0;
+  int i;
+
+  if (number == 0)
+    {
+      struct sgrp *sg;
+
+      setsgent ();
+      while ((sg = getsgent ()) != NULL)
+	print_gshadow (sg);
+      endsgent ();
+      return result;
+    }
+
+  for (i = 0; i < number; ++i)
+    {
+      struct sgrp *sg;
+
+      sg = getsgnam (key[i]);
+
+      if (sg == NULL)
+	result = 2;
+      else
+	print_gshadow (sg);
+    }
+
+  return result;
+}
+
+
 struct
   {
     const char *name;
@@ -786,6 +852,7 @@
 DN(rpc)
 DN(services)
 D(shadow)
+D(gshadow)
 #undef D
     { NULL, NULL }
   };
