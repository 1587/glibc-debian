#! /bin/sh -e

# All lines beginning with `# DP:' are a description of the patch.
# DP: Description: Fix utimes wrong calculation.
# DP: Author: Paul Eggert <eggert@CS.UCLA.EDU>
# DP: Upstream status: [Not submitted yet]
# DP: Status Details: 
# DP: Date: 2003-08-26

if [ $# -ne 2 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch) patch -d "$2" -f --no-backup-if-mismatch -p1 < $0;;
    -unpatch) patch -d "$2" -f --no-backup-if-mismatch -R -p1 < $0;;
    *)
	echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
	exit 1
esac
exit 0

# append the patch here and adjust the -p? flag in the patch calls.
2003-08-09  Paul Eggert  <eggert@twinsun.com>

        Revert to utimes's previous (i.e., pre-2003-07-12) behavior of
        truncating fractional parts of timestamps that it can't use,
        instead of attempting to round.
        * sysdeps/unix/sysv/linux/utimes.c (__utimes):
        Fix actime and modtime computation to truncate microseconds
        rather than attempting to round.
        * sysdeps/unix/sysv/linux/futimes.c (__futimes): Likewise.
        * sysdeps/posix/utimes.c (__utimes): Likewise.

diff -upr glibc-2.3.2.orig/sysdeps/posix/utimes.c glibc-2.3.2/sysdeps/posix/utimes.c
--- glibc-2.3.2.orig/sysdeps/posix/utimes.c	2001-07-07 20:21:27.000000000 +0100
+++ glibc-2.3.2/sysdeps/posix/utimes.c	2003-08-26 16:35:47.000000000 +0100
@@ -31,8 +31,8 @@ __utimes (const char *file, const struct
   if (tvp)
     {
       times = &buf;
-      times->actime = tvp[0].tv_sec + tvp[0].tv_usec / 1000000;
-      times->modtime = tvp[1].tv_sec + tvp[1].tv_usec / 1000000;
+      buf.actime = tvp[0].tv_sec + tvp[0].tv_usec / 1000000;
+      buf.modtime = tvp[1].tv_sec + tvp[1].tv_usec / 1000000;
     }
   else
     times = NULL;
diff -upr glibc-2.3.2.orig/sysdeps/unix/sysv/linux/futimes.c glibc-2.3.2/sysdeps/unix/sysv/linux/futimes.c
--- glibc-2.3.2.orig/sysdeps/unix/sysv/linux/futimes.c	2003-08-26 16:34:20.000000000 +0100
+++ glibc-2.3.2/sysdeps/unix/sysv/linux/futimes.c	2003-08-26 16:35:17.000000000 +0100
@@ -57,8 +57,8 @@ __futimes (int fd, const struct timeval 
   if (tvp != NULL)
     {
       times = &buf;
-      buf.actime = tvp[0].tv_sec + tvp[0].tv_usec >= 500000;
-      buf.modtime = tvp[1].tv_sec + tvp[1].tv_usec >= 500000;
+      buf.actime = tvp[0].tv_sec + tvp[0].tv_usec / 1000000;
+      buf.modtime = tvp[1].tv_sec + tvp[1].tv_usec / 1000000;
     }
   else
     times = NULL;
diff -upr glibc-2.3.2.orig/sysdeps/unix/sysv/linux/utimes.c glibc-2.3.2/sysdeps/unix/sysv/linux/utimes.c
--- glibc-2.3.2.orig/sysdeps/unix/sysv/linux/utimes.c	2003-08-26 16:34:21.000000000 +0100
+++ glibc-2.3.2/sysdeps/unix/sysv/linux/utimes.c	2003-08-26 16:35:34.000000000 +0100
@@ -47,8 +47,8 @@ __utimes (const char *file, const struct
   if (tvp != NULL)
     {
       times = &buf;
-      buf.actime = tvp[0].tv_sec + tvp[0].tv_usec >= 500000;
-      buf.modtime = tvp[1].tv_sec + tvp[1].tv_usec >= 500000;
+      buf.actime = tvp[0].tv_sec + tvp[0].tv_usec / 1000000;
+      buf.modtime = tvp[1].tv_sec + tvp[1].tv_usec / 1000000;
     }
   else
     times = NULL;
