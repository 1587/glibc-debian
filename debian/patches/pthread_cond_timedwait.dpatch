#! /bin/sh -e

# DP: Patch from Jakub Jelinek to fix crash with pthread_cond_timedwait
# DP: in libraries not linked with -lpthread.

# DP: http://sources.redhat.com/ml/libc-hacker/2003-09/msg00002.html

if [ $# -ne 2 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch) patch -d "$2" -f --no-backup-if-mismatch -p1 < $0;;
    -unpatch) patch -d "$2" -f --no-backup-if-mismatch -R -p1 < $0;;
    *)
        echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
        exit 1
esac
exit 0

--- libc/linuxthreads/Versions.jj	2003-06-17 18:28:03.000000000 -0400
+++ libc/linuxthreads/Versions	2003-09-01 05:28:26.000000000 -0400
@@ -7,6 +7,7 @@ libc {
     pthread_attr_setschedparam; pthread_attr_setschedpolicy;
     pthread_attr_setscope; pthread_cond_broadcast; pthread_cond_destroy;
     pthread_cond_init; pthread_cond_signal; pthread_cond_wait;
+    pthread_cond_timedwait;
     pthread_condattr_destroy; pthread_condattr_init; pthread_equal;
     pthread_exit; pthread_getschedparam; pthread_mutex_destroy;
     pthread_mutex_init; pthread_mutex_lock; pthread_mutex_unlock;
@@ -20,7 +21,7 @@ libc {
     # Changed pthread_cond_t.
     pthread_cond_init; pthread_cond_destroy;
     pthread_cond_wait; pthread_cond_signal;
-    pthread_cond_broadcast;
+    pthread_cond_broadcast; pthread_cond_timedwait;
   }
   GLIBC_PRIVATE {
     # Internal libc interface to libpthread
--- libc/linuxthreads/sysdeps/pthread/pthread-functions.h.jj	2003-04-20 03:37:06.000000000 -0400
+++ libc/linuxthreads/sysdeps/pthread/pthread-functions.h	2003-09-01 05:35:34.000000000 -0400
@@ -54,6 +54,8 @@ struct pthread_functions
 				  const pthread_condattr_t *);
   int (*ptr___pthread_cond_signal) (pthread_cond_t *);
   int (*ptr___pthread_cond_wait) (pthread_cond_t *, pthread_mutex_t *);
+  int (*ptr___pthread_cond_timedwait) (pthread_cond_t *, pthread_mutex_t *,
+				       const struct timespec *);
   int (*ptr_pthread_equal) (pthread_t, pthread_t);
   void (*ptr___pthread_exit) (void *);
   int (*ptr_pthread_getschedparam) (pthread_t, int *, struct sched_param *);
--- libc/linuxthreads/forward.c.jj	2003-01-02 19:30:04.000000000 -0500
+++ libc/linuxthreads/forward.c	2003-09-01 05:29:57.000000000 -0400
@@ -128,6 +128,15 @@ compat_symbol (libc, __pthread_cond_wait
 #endif
 versioned_symbol (libc, __pthread_cond_wait, pthread_cond_wait, GLIBC_2_3_2);
 
+FORWARD (__pthread_cond_timedwait,
+	 (pthread_cond_t *cond, pthread_mutex_t *mutex,
+	  const struct timespec *abstime), (cond, mutex, abstime), 0)
+#if SHLIB_COMPAT(libc, GLIBC_2_0, GLIBC_2_3_2)
+strong_alias (__pthread_cond_timedwait, __pthread_cond_timedwait_2_0)
+compat_symbol (libc, __pthread_cond_timedwait_2_0, pthread_cond_timedwait, GLIBC_2_0);
+#endif
+versioned_symbol (libc, __pthread_cond_timedwait, pthread_cond_timedwait, GLIBC_2_3_2);
+
 
 FORWARD (pthread_equal, (pthread_t thread1, pthread_t thread2),
 	 (thread1, thread2), 1)
--- libc/linuxthreads/internals.h.jj	2003-06-17 18:22:21.000000000 -0400
+++ libc/linuxthreads/internals.h	2003-09-01 05:30:59.000000000 -0400
@@ -354,6 +354,9 @@ extern int __pthread_cond_init (pthread_
 				const pthread_condattr_t *cond_attr);
 extern int __pthread_cond_destroy (pthread_cond_t *cond);
 extern int __pthread_cond_wait (pthread_cond_t *cond, pthread_mutex_t *mutex);
+extern int __pthread_cond_timedwait (pthread_cond_t *cond,
+				     pthread_mutex_t *mutex,
+				     const struct timespec *abstime);
 extern int __pthread_cond_signal (pthread_cond_t *cond);
 extern int __pthread_cond_broadcast (pthread_cond_t *cond);
 extern int __pthread_condattr_init (pthread_condattr_t *attr);
--- libc/linuxthreads/pthread.c.jj	2003-08-14 05:05:27.000000000 -0400
+++ libc/linuxthreads/pthread.c	2003-09-01 05:36:55.000000000 -0400
@@ -260,6 +260,7 @@ struct pthread_functions __pthread_funct
     .ptr___pthread_cond_init = __pthread_cond_init,
     .ptr___pthread_cond_signal = __pthread_cond_signal,
     .ptr___pthread_cond_wait = __pthread_cond_wait,
+    .ptr___pthread_cond_timedwait = __pthread_cond_timedwait,
     .ptr_pthread_equal = __pthread_equal,
     .ptr___pthread_exit = __pthread_exit,
     .ptr_pthread_getschedparam = __pthread_getschedparam,

