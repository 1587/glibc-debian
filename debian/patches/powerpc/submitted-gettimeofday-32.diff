From 2d3f338fde5f73f42fce8f2167b15f9f4bd7e3a2 Mon Sep 17 00:00:00 2001
From: Adhemerval Zanella <azanella@linux.vnet.ibm.com>
Date: Fri, 10 Jan 2014 10:28:42 -0600
Subject: [PATCH 2/2] PowerPC: Fix gettimeofday internal call

This patch fixes GLIBC internal call of gettimeofday for PPC32. The
ppc32 build does not generate PLT calls for internal symbols, so
__gettimeofday calls end up being calling the IFUNC resolver instead
of the resolved symbol. This patches its behaviour by setting internal
call to internal function that correctly calls gettimeofday functions.
---
 sysdeps/unix/sysv/linux/powerpc/gettimeofday.c | 14 ++++++++++++--
 1 file changed, 12 insertions(+), 2 deletions(-)

diff --git a/sysdeps/unix/sysv/linux/powerpc/gettimeofday.c b/sysdeps/unix/sysv/linux/powerpc/gettimeofday.c
index a90fd3e..802a43c 100644
--- a/sysdeps/unix/sysv/linux/powerpc/gettimeofday.c
+++ b/sysdeps/unix/sysv/linux/powerpc/gettimeofday.c
@@ -49,8 +49,18 @@ asm (".type __gettimeofday, %gnu_indirect_function");
 /* This is doing "libc_hidden_def (__gettimeofday)" but the compiler won't
    let us do it in C because it doesn't know we're defining __gettimeofday
    here in this file.  */
-asm (".globl __GI___gettimeofday\n"
-     "__GI___gettimeofday = __gettimeofday");
+asm (".globl __GI___gettimeofday");
+
+#ifdef __powerpc64__
+asm ("__GI___gettimeofday = __gettimeofday");
+#else
+int
+__gettimeofday_vsyscall (struct timeval *tv, struct timezone *tz)
+{
+  return INLINE_VSYSCALL (gettimeofday, 2, tv, tz);
+}
+asm ("__GI___gettimeofday = __gettimeofday_vsyscall");
+#endif
 
 #else
 
-- 
1.8.4
