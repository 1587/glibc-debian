Roland disagrees with this undo.

2007-07-22  Thomas Schwinge  <tschwinge@gnu.org>

        * sysdeps/mach/hurd/i386/init-first.c: (_hurd_stack_setup): Take
	a ``void *'' argument.  Save the caller into CALLER and pass 
	that one on.
	(init): Avoid an ugly typecast.

t/init-first.c

---
 sysdeps/mach/hurd/i386/init-first.c |   10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

--- a/sysdeps/mach/hurd/i386/init-first.c
+++ b/sysdeps/mach/hurd/i386/init-first.c
@@ -384,14 +384,14 @@
    This poorly-named function is called by static-start.S,
    which should not exist at all.  */
 void
-_hurd_stack_setup (void)
+_hurd_stack_setup (void *arg, ...)
 {
-  intptr_t caller = (intptr_t) __builtin_return_address (0);
+  void *caller = (&arg)[-1];
 
   void doinit (intptr_t *data)
     {
       /* This function gets called with the argument data at TOS.  */
-      void doinit1 (int argc, ...)
+      void doinit1 (volatile int argc, ...)
 	{
 	  /* If we use ``__builtin_frame_address (0) + 2'' here, GCC gets
 	     confused.  */
@@ -402,7 +402,7 @@
 	 jump to `doinit1' (above), so it is as if __libc_init_first's
 	 caller had called `doinit1' with the argument data already on the
 	 stack.  */
-      *--data = caller;
+      *--data = (intptr_t) caller;
       asm volatile ("movl %0, %%esp\n" /* Switch to new outermost stack.  */
 		    "movl $0, %%ebp\n" /* Clear outermost frame pointer.  */
 		    "jmp *%1" : : "r" (data), "r" (&doinit1) : "sp");
@@ -411,7 +411,7 @@
 
   first_init ();
 
-  _hurd_startup ((void **) __builtin_frame_address (0) + 2, &doinit);
+  _hurd_startup (&arg, &doinit);
 }
 #endif
 
