2005-01-14  GOTO Masanori  <gotom@debian.or.jp>

        * manual/memory.texi (sbrk): Fix definition.

===================================================================
RCS file: /cvs/glibc/libc/manual/memory.texi,v
retrieving revision 1.78
retrieving revision 1.79
diff -u -r1.78 -r1.79
--- libc/manual/memory.texi	2004/10/18 00:53:12	1.78
+++ libc/manual/memory.texi	2005/01/26 02:39:11	1.79
@@ -2384,7 +2384,7 @@
 
 @comment unistd.h
 @comment BSD
-@deftypefun int sbrk (ptrdiff_t @var{delta})
+@deftypefun void *sbrk (ptrdiff_t @var{delta})
 This function is the same as @code{brk} except that you specify the new
 end of the data segment as an offset @var{delta} from the current end
 and on success the return value is the address of the resulting end of

2005-08-29  Thomas Schwinge  <schwinge@nic-nac-project.de>

	[BZ #1261]
	* manual/memory.texi (Hooks for Malloc): Correct prototype of
	my_init_hook() and definition of my_free_hook.

===================================================================
RCS file: /cvs/glibc/libc/manual/memory.texi,v
retrieving revision 1.79
retrieving revision 1.80
diff -u -r1.79 -r1.80
--- libc/manual/memory.texi	2005/01/26 02:39:11	1.79
+++ libc/manual/memory.texi	2005/09/13 17:46:01	1.80
@@ -948,7 +948,7 @@
 #include <malloc.h>
 
 /* Prototypes for our hooks.  */
-static void *my_init_hook (void);
+static void my_init_hook (void);
 static void *my_malloc_hook (size_t, const void *);
 static void my_free_hook (void*, const void *);
 
@@ -984,7 +984,7 @@
   return result;
 @}
 
-static void *
+static void
 my_free_hook (void *ptr, const void *caller)
 @{
   /* Restore all old hooks */
