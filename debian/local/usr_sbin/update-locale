#! /usr/bin/perl -w

use strict;
use Getopt::Long;
use File::Temp;

my $progname     = "update-locale";
my $locale_file  = "/etc/default/locale";

my $help         = 0;
my $reset        = 0;
my $remove       = 0;
my $no_checks    = 0;

GetOptions(
	'reset'        => \$reset,
	'remove'       => \$remove,
	'locale-file'  => \$locale_file,
	'no-checks'    => \$no_checks,
	'h|help'       => \$help,
);

sub usage
{
	my $rc = shift;
	print STDERR "Usage: $progname [OPTIONS] [LANG=locale] [LC_NUMERIC=locale] ...
Options:
   --help          display this message and exit
   --reset         ignore variables defined in the locale file
   --remove        remove variables from locale file
   --locale-file   file containing locale variables
                   (Default: /etc/default/locale)
   --no-checks     do not perform sanity checks on locale variables
";
	exit $rc;
}

$help && usage(0);

#  Process command-line arguments
my %arg = ();
my $content = '';
if (-r $locale_file)
{
	#  Read current values
	open(IN, "<", $locale_file)
		or die "$progname: Unable to read $locale_file: $!\n";
	while (<IN>)
	{
		$content .= $_;
		next unless m/^(\w+)=(.*)/;
		$arg{$1} = $2 unless $reset;
	}
	close(IN)
		or die "$progname: Unable to close $locale_file: $!\n";
	$content =~ s/^([^#])/#$1/mg;
	$content .= "\n" unless $content =~ m/\n$/s;
}
else
{
	$content = "#  File generated by $progname\n";
}
for (@ARGV)
{
	if (m/(.*?)=(.*)/)
	{
		$arg{$1} = $2;
	}
	elsif ($remove)
	{
		delete $arg{$_};
	}
}

my $env = '';
for (qw(LANG LANGUAGE LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT LC_IDENTIFICATION LC_ALL))
{
	if (defined $arg{$_} && $arg{$_} ne '')
	{
		$env .= " $_=$arg{$_}";
		$content =~ s/^#[#\s]*$_=.*/$_=$arg{$_}/m or
			$content .= "$_=$arg{$_}\n";
	}
}

#  Sanity checks
if ($no_checks == 0)
{
	#  Check tthat this locale does exist
	my $charset = `$env locale charmap 2>&1`;
	die "*** $progname: Error: invalid locale settings: $env\n"
		if ($charset =~ m/Cannot set/);
	#  If LANGUAGE is set, its first value must be compatible with LC_MESSAGES
	if (defined $arg{LANGUAGE})
	{
		my $language = $arg{LANGUAGE};
		$language =~ s/[.:_].*//;
		my $msg = '';
		my $var = '';
		for (qw(LC_MESSAGES LANG LC_ALL))
		{
			if (defined $arg{$_})
			{
				$var = $_;
				$msg = $arg{$_};
			}
		}
		die "*** $progname: Error: LANGUAGE ($arg{LANGUAGE}) is not compatible with $var ($msg)\n"
			if ($msg !~ m/^$language/);
	}
}

#  Write locale file
my ($fh, $filename) = File::Temp::tempfile();
open(OUT, ">", $filename)
	or die "$progname: Unable to write $filename: $!\n";
print OUT $content;
close(OUT)
	or die "$progname: Unable to close $filename: $!\n";
chmod 0644, $filename
	or die "$progname: Unable to chmod $filename: $!\n";
rename $filename, $locale_file
	or die "$progname: Unable to rename $filename into $locale_file: $!\n";

1;
